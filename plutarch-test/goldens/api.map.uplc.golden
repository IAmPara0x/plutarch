lookup (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsInteger i2 i1) (delay False)) (delay (i1 (\i0 -> False) (delay True)))) ((\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (unIData (force (force sndPair) i3))) (bData i2) ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (\i0 -> \i0 -> i2 42)) (force headList)) #6b6579))
lookupData (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> equalsData i2 i1) (delay False)) (delay (i1 (\i0 -> False) (delay True)))) ((\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (bData i2) ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (\i0 -> \i0 -> i2 (iData 42))) (force headList)) #6b6579))
singleton (program 1.0.0 ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42))
singletonData (program 1.0.0 ((\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData #6b6579) (iData 42)))
difference.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay i10) (delay ((\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3)) (i10 (i8 i2) i1) (\i0 -> i2) ((\i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (i12 (i13 i1)) i4) (delay (i5 (i13 i1))) (delay (i2 (i14 i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (i7 (i8 i2)) i4)) (i2 (i8 i1)))))) i8) ((\i0 -> \i0 -> (\i0 -> \i0 -> i10 (mkPairData i2 i1) i11) (bData i2) (iData i1)) #6b6579 42)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
difference.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i11) (delay ((\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3)) (i11 (i9 i2) i1) (\i0 -> i2) ((\i0 -> \i0 -> \i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (i13 (i14 i1)) i4) (delay (i5 (i14 i1))) (delay (i2 (i15 i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (i8 (i9 i2)) i4)) (i2 (i9 i1)))))) i2) ((\i0 -> \i0 -> (\i0 -> \i0 -> i10 (mkPairData i2 i1) i11) (bData i2) (iData i1)) #6b6579 42) i7) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
difference.emptyResult (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i13) (delay ((\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3)) (i13 (i9 i2) i1) (\i0 -> i2) ((\i0 -> \i0 -> \i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (i13 (i14 i1)) i4) (delay (i5 (i14 i1))) (delay (i2 (i15 i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (i8 (i9 i2)) i4)) (i2 (i9 i1)))))) i2) (i6 i10 42) (i6 i10 84)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i10 (\i0 -> \i0 -> force (i13 i1 (delay (\i0 -> i1 i24 i24)) (delay (i2 (i17 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i27 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i27 (mkPairData i3 i2) i4)) (i6 i1 (i22 (i19 i4)))) (i17 (i18 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i8 i1 (i8 i2 (i12 (\i0 -> \i0 -> force (i15 i1 (delay i25) (delay ((\i0 -> i12 (i25 (i19 i2) i1) (\i0 -> i2) (i13 i21 (i18 (i19 i2)) i4)) (i2 (i19 i1)))))) i4)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i9 i17 i2 i3))) (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1)))) (\i0 -> \i0 -> i2) (i13 i17 42) (i13 i17 42)) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i18 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) i1) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWith.(+) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> i1 i23 i23)) (delay (i2 (i16 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i26 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i26 (mkPairData i3 i2) i4)) (i6 i1 (i21 (i18 i4)))) (i16 (i17 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i11 (\i0 -> \i0 -> force (i14 i1 (delay i24) (delay ((\i0 -> i11 (i24 (i18 i2) i1) (\i0 -> i2) (i12 i20 (i17 (i18 i2)) i4)) (i2 (i18 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i16 i2 i3))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) (i13 i17 42) (i13 i17 42)) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i18 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) i1) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWithData.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> i1 i23 i23)) (delay (i2 (i16 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i26 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i26 (mkPairData i3 i2) i4)) (i6 i1 (i21 (i18 i4)))) (i16 (i17 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i11 (\i0 -> \i0 -> force (i14 i1 (delay i24) (delay ((\i0 -> i11 (i24 (i18 i2) i1) (\i0 -> i2) (i12 i20 (i17 (i18 i2)) i4)) (i2 (i18 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i16 i2 i3))) (\i0 -> \i0 -> i2) (i13 i17 42) (i13 i17 42)) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i18 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) i1) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWithData.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> i1 i21 i21)) (delay (i2 (i16 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i24 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i24 (mkPairData i3 i2) i4)) (i6 i1 (i21 (i18 i4)))) (i16 (i17 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i11 (\i0 -> \i0 -> force (i14 i1 (delay i22) (delay ((\i0 -> i11 (i22 (i18 i2) i1) (\i0 -> i2) (i12 i20 (i17 (i18 i2)) i4)) (i2 (i18 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i16 i2 i3))) (\i0 -> \i0 -> i2) i14 ((\i0 -> \i0 -> (\i0 -> \i0 -> i17 (mkPairData i2 i1) i18) (bData i2) (iData i1)) #6b6579 42)) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i16 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) i1) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (force mkCons)) [  ]))
unionWithData.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> i1 i21 i21)) (delay (i2 (i16 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i24 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i24 (mkPairData i3 i2) i4)) (i6 i1 (i21 (i18 i4)))) (i16 (i17 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i11 (\i0 -> \i0 -> force (i14 i1 (delay i22) (delay ((\i0 -> i11 (i22 (i18 i2) i1) (\i0 -> i2) (i12 i20 (i17 (i18 i2)) i4)) (i2 (i18 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i16 i2 i3))) (\i0 -> \i0 -> i2) ((\i0 -> \i0 -> (\i0 -> \i0 -> i17 (mkPairData i2 i1) i18) (bData i2) (iData i1)) #6b6579 42) i14) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i16 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) i1) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (force mkCons)) [  ]))