lookup.hit (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (unIData (force (force sndPair) i3))) (bData i2) ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (force headList)) #6b6579))
lookup.miss (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i7 i1)) i4) (delay (i5 (i7 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (unIData (force (force sndPair) i3))) (bData i1)) #6e6f6b6579 ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42)) (force headList)))
lookupData.hit (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (bData i2) ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (force headList)) #6b6579))
lookupData.miss (program 1.0.0 ((\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (bData #6e6f6b6579) ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42)) (force headList)))
singleton (program 1.0.0 ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42))
singletonData (program 1.0.0 ((\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData #6b6579) (iData 42)))
insert.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i14))) (delay (\i0 -> force (force ifThenElse (equalsData (force (force fstPair) (i12 i2)) i5) (delay (i1 (i6 (i11 i2)))) (delay (i3 (i11 i2) (\i0 -> i2 (i14 (i13 i3) i1))))))))) i1 (\i0 -> i1)) (\i0 -> i8 (mkPairData i3 i2) i1) i2) (bData i2) (iData i1)) #6b6579 42 i4) (force tailList)) (force headList)) (force mkCons)) [  ]))
insert.replace (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i13))) (delay (\i0 -> force (force ifThenElse (equalsData (force (force fstPair) (i11 i2)) i5) (delay (i1 (i6 (i10 i2)))) (delay (i3 (i10 i2) (\i0 -> i2 (i13 (i12 i3) i1))))))))) i1 (\i0 -> i1)) (\i0 -> i7 (mkPairData i3 i2) i1) i2) (bData i6) (iData i1)) 84 ((\i0 -> (\i0 -> \i0 -> i6 (mkPairData i2 i1) i7) (bData i6) (iData i1)) 42)) (force tailList)) (force headList)) (force mkCons)) [  ]) #6b6579))
delete.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i10))) (delay (\i0 -> force (force ifThenElse (equalsData (force (force fstPair) (i9 i2)) i5) (delay (i1 (i6 (i8 i2)))) (delay (i3 (i8 i2) (\i0 -> i2 (force mkCons (i10 i3) i1))))))))) i1 (\i0 -> i1)) (\i0 -> i1) (bData i1)) #6b6579 i3) (force tailList)) (force headList)) [  ]))
delete.only (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i10))) (delay (\i0 -> force (force ifThenElse (equalsData (force (force fstPair) (i8 i2)) i5) (delay (i1 (i6 (i7 i2)))) (delay (i3 (i7 i2) (\i0 -> i2 (i10 (i9 i3) i1))))))))) i1 (\i0 -> i1)) (\i0 -> i1) (bData i5) ((\i0 -> (\i0 -> \i0 -> i6 (mkPairData i2 i1) i7) (bData i6) (iData i1)) 42)) (force tailList)) (force headList)) (force mkCons)) [  ]) #6b6579))
delete.miss (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i11))) (delay (\i0 -> force (force ifThenElse (equalsData (force (force fstPair) (i9 i2)) i5) (delay (i1 (i6 (i8 i2)))) (delay (i3 (i8 i2) (\i0 -> i2 (i11 (i10 i3) i1))))))))) i1 (\i0 -> i1)) (\i0 -> i1) (bData i1)) #6e6f6b6579 ((\i0 -> \i0 -> (\i0 -> \i0 -> i7 (mkPairData i2 i1) i8) (bData i2) (iData i1)) #6b6579 42)) (force tailList)) (force headList)) (force mkCons)) [  ]))
delete.new (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> i1) (bData i8) ((\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i13 (mkPairData i3 i2) i1) i2) (bData i9) (iData i1)) 6 ((\i0 -> \i0 -> (\i0 -> \i0 -> i13 (mkPairData i2 i1) i14) (bData i2) (iData i1)) #6b6579 42))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay (\i0 -> force (i9 (equalsData (i10 (i12 i2)) i5) (delay (i1 (i6 (i11 i2)))) (delay (i3 (i11 i2) (\i0 -> i2 (i15 (i13 i3) i1))))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force tailList)) (force headList)) #6e65776b6579) (force mkCons)) [  ]))
delete.old (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> i1) (bData i10) ((\i0 -> \i0 -> (\i0 -> \i0 -> i5 (\i0 -> i13 (mkPairData i3 i2) i1) i2) (bData i2) (iData i1)) #6e65776b6579 6 ((\i0 -> (\i0 -> \i0 -> i11 (mkPairData i2 i1) i12) (bData i11) (iData i1)) 42))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i14))) (delay (\i0 -> force (i9 (equalsData (i10 (i12 i2)) i5) (delay (i1 (i6 (i11 i2)))) (delay (i3 (i11 i2) (\i0 -> i2 (i14 (i13 i3) i1))))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force tailList)) (force headList)) (force mkCons)) [  ]) #6b6579))
difference.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay i10) (delay ((\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3)) (i10 (i8 i2) i1) (\i0 -> i2) ((\i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (i12 (i13 i1)) i4) (delay (i5 (i13 i1))) (delay (i2 (i14 i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (i7 (i8 i2)) i4)) (i2 (i8 i1)))))) i8) ((\i0 -> \i0 -> (\i0 -> \i0 -> i10 (mkPairData i2 i1) i11) (bData i2) (iData i1)) #6b6579 42)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
difference.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i11) (delay ((\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3)) (i11 (i9 i2) i1) (\i0 -> i2) ((\i0 -> \i0 -> \i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (i13 (i14 i1)) i4) (delay (i5 (i14 i1))) (delay (i2 (i15 i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (i8 (i9 i2)) i4)) (i2 (i9 i1)))))) i2) ((\i0 -> \i0 -> (\i0 -> \i0 -> i10 (mkPairData i2 i1) i11) (bData i2) (iData i1)) #6b6579 42) i7) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
difference.emptyResult (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i13) (delay ((\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3)) (i13 (i9 i2) i1) (\i0 -> i2) ((\i0 -> \i0 -> \i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (i13 (i14 i1)) i4) (delay (i5 (i14 i1))) (delay (i2 (i15 i1)))))))) i1) (\i0 -> \i0 -> \i0 -> i2 (force (force sndPair) i3)) (i8 (i9 i2)) i4)) (i2 (i9 i1)))))) i2) (i6 i10 42) (i6 i10 84)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i9 (\i0 -> \i0 -> force (i12 i1 (delay (\i0 -> i1 i23 i23)) (delay (i2 (i16 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i26 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i26 (mkPairData i3 i2) i4)) (i6 i1 (i21 (i18 i4)))) (i16 (i17 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i8 i1 (i8 i2 (i11 (\i0 -> \i0 -> force (i14 i1 (delay i24) (delay ((\i0 -> i12 (i24 (i18 i2) i1) (\i0 -> i2) (i13 i20 (i17 (i18 i2)) i4)) (i2 (i18 i1)))))) i4)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i9 i16 i2 i3))) (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1)))) (\i0 -> \i0 -> i2) (i12 i16 42) (i12 i16 42)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i3) (delay (i17 (i11 i1) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWith.(+) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i22 i22)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i25 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i25 (mkPairData i3 i2) i4)) (i6 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i10 (\i0 -> \i0 -> force (i13 i1 (delay i23) (delay ((\i0 -> i11 (i23 (i17 i2) i1) (\i0 -> i2) (i12 i19 (i16 (i17 i2)) i4)) (i2 (i17 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i15 i2 i3))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) (i12 i16 42) (i12 i16 42)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i3) (delay (i17 (i11 i1) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWithData.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i22 i22)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i25 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i25 (mkPairData i3 i2) i4)) (i6 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i10 (\i0 -> \i0 -> force (i13 i1 (delay i23) (delay ((\i0 -> i11 (i23 (i17 i2) i1) (\i0 -> i2) (i12 i19 (i16 (i17 i2)) i4)) (i2 (i17 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i15 i2 i3))) (\i0 -> \i0 -> i2) (i12 i16 42) (i12 i16 42)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i3) (delay (i17 (i11 i1) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
unionWithData.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i20 i20)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i23 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i23 (mkPairData i3 i2) i4)) (i6 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i10 (\i0 -> \i0 -> force (i13 i1 (delay i21) (delay ((\i0 -> i11 (i21 (i17 i2) i1) (\i0 -> i2) (i12 i19 (i16 (i17 i2)) i4)) (i2 (i17 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i15 i2 i3))) (\i0 -> \i0 -> i2) i13 ((\i0 -> \i0 -> (\i0 -> \i0 -> i16 (mkPairData i2 i1) i17) (bData i2) (iData i1)) #6b6579 42)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i3) (delay (i15 (i11 i1) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (force mkCons)) [  ]))
unionWithData.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i20 i20)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1)) (\i0 -> \i0 -> i1 (i23 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i23 (mkPairData i3 i2) i4)) (i6 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i3 (\i0 -> \i0 -> \i0 -> i1 i3 i2) (\i0 -> \i0 -> i7 i1 (i7 i2 (i10 (\i0 -> \i0 -> force (i13 i1 (delay i21) (delay ((\i0 -> i11 (i21 (i17 i2) i1) (\i0 -> i2) (i12 i19 (i16 (i17 i2)) i4)) (i2 (i17 i1)))))) i4)))) (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i8 i15 i2 i3))) (\i0 -> \i0 -> i2) ((\i0 -> \i0 -> (\i0 -> \i0 -> i16 (mkPairData i2 i1) i17) (bData i2) (iData i1)) #6b6579 42) i13) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i3) (delay (i15 (i11 i1) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (force mkCons)) [  ]))