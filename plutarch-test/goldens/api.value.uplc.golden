singleton (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (bData i4) (mapData i1)) (i4 (bData i2) (iData i1))) #c0 #736f6d65746f6b656e 1) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
valueOf (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> \i0 -> i2 (unMapData (i14 i3))) (bData i2) i3 (\i0 -> i5 (\i0 -> \i0 -> \i0 -> i2 (unIData (i15 i3))) (bData i2) i1 (\i0 -> i1) (delay 0)) (delay 0)) ((\i0 -> (\i0 -> i11 (bData i14) (mapData i1)) (i10 (bData i14) (iData i1))) 1) i12 i13) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (force (force sndPair))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
unionWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> iData (i7 (unIData i2) (unIData i1))) i2 i1) i2 i1) (\i0 -> \i0 -> i2) (i16 i22 i23 1) (i16 i22 i23 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> i5 i1 i3 (\i0 -> \i0 -> i9 i1 (i9 i2 (i10 i4 i1)))) (\i0 -> \i0 -> i10 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i11 i18 i2 i3)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i24 i24)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (i27 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i27 (mkPairData i3 i2) i4)) (i7 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i1 (\i0 -> \i0 -> \i0 -> i1 i3 i2))) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i20 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i20) (delay ((\i0 -> i6 (i20 (i12 i2) i1) (\i0 -> i2) (i7 i14 (i11 (i12 i2)) i4)) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
unionWith.(+) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i16 i22 i23 1) (i16 i22 i23 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> i5 i1 i3 (\i0 -> \i0 -> i9 i1 (i9 i2 (i10 i4 i1)))) (\i0 -> \i0 -> i10 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i11 i18 i2 i3)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i24 i24)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (i27 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i27 (mkPairData i3 i2) i4)) (i7 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i1 (\i0 -> \i0 -> \i0 -> i1 i3 i2))) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i20 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i20) (delay ((\i0 -> i6 (i20 (i12 i2) i1) (\i0 -> i2) (i7 i14 (i11 (i12 i2)) i4)) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
unionWith.tokens (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i16 i22 #736f6d65746f6b656e 1) (i16 i22 #6f74686572746f6b656e 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> i5 i1 i3 (\i0 -> \i0 -> i9 i1 (i9 i2 (i10 i4 i1)))) (\i0 -> \i0 -> i10 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i11 i18 i2 i3)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i24 i24)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (i27 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i27 (mkPairData i3 i2) i4)) (i7 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i1 (\i0 -> \i0 -> \i0 -> i1 i3 i2))) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i20 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i20) (delay ((\i0 -> i6 (i20 (i12 i2) i1) (\i0 -> i2) (i7 i14 (i11 (i12 i2)) i4)) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0))
unionWith.symbols (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i16 #c0 i22 1) (i16 #c2 i22 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> i5 i1 i3 (\i0 -> \i0 -> i9 i1 (i9 i2 (i10 i4 i1)))) (\i0 -> \i0 -> i10 (\i0 -> \i0 -> i2 i3) (\i0 -> \i0 -> \i0 -> i1 (i8 i4 i3)) (i11 i18 i2 i3)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay (\i0 -> i1 i24 i24)) (delay (i2 (i15 i1) (\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (i27 (mkPairData i3 i2) i5) i4) (\i0 -> \i0 -> i1 i5 (i27 (mkPairData i3 i2) i4)) (i7 i1 (i20 (i17 i4)))) (i15 (i16 i3))))))) i1 (\i0 -> \i0 -> \i0 -> i1 i3 i2))) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i4 i1) (\i0 -> i3 i1))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i3) (delay (i20 (i12 i1) (i2 (i13 i1)))))) i2)) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i20) (delay ((\i0 -> i6 (i20 (i12 i2) i1) (\i0 -> i2) (i7 i14 (i11 (i12 i2)) i4)) (i2 (i12 i1)))))) i2)) (\i0 -> \i0 -> \i0 -> i1 (\i0 -> i3 i1) (delay i3))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i8 (equalsData (i9 (i10 i1)) i4) (delay (i5 (i10 i1))) (delay (i2 (i11 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> \i0 -> i2 (i4 i3))) (force (force sndPair))) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))