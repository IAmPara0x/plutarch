singleton (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (bData i4) (mapData i1)) (i4 (bData i2) (iData i1))) #c0 #736f6d65746f6b656e 1) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
valueOf.itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i5) (delay (force (i9 (equalsData (i10 (i12 i1)) i6) (delay (i4 (i11 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)))
valueOf.applied (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) ((\i0 -> (\i0 -> i12 (bData i15) (mapData i1)) (i11 (bData i15) (iData i1))) 1) i13 i14) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i5) (delay (force (i9 (equalsData (i10 (i12 i1)) i6) (delay (i4 (i11 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
valueOf.growing.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) ((\i0 -> \i0 -> \i0 -> (\i0 -> i14 (bData i4) (mapData i1)) (i13 (bData i2) (iData i1))) #c0 #736f6d65746f6b656e 1) #c7 #746f6b656e) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i5) (delay (force (i9 (equalsData (i10 (i12 i1)) i6) (delay (i4 (i11 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
valueOf.growing.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) ((\i0 -> \i0 -> (\i0 -> i7 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i8 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i13 i19 #736f6d65746f6b656e 1) (i13 i19 i20 1)) #c7 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i9 i1 (delay i5) (delay (force (i11 (equalsData (i15 (i14 i1)) i6) (delay (i4 (i10 (i14 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #746f6b656e))
valueOf.growing.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i23 1)) (i17 #c1 i23 1)) #c7 i23) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.4 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i23 1)) (i17 #c1 i23 1)) (i17 #c2 i23 1)) #c7 i23) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i23 1)) (i17 #c1 i23 1)) (i17 #c2 i23 1)) (i17 #c3 i23 1)) #c7 i23) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.6 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i23 1)) (i17 #c1 i23 1)) (i17 #c2 i23 1)) (i17 #c3 i23 1)) (i17 #c4 i23 1)) #c7 i23) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.7 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i23 1)) (i17 #c1 i23 1)) (i17 #c2 i23 1)) (i17 #c3 i23 1)) (i17 #c4 i23 1)) (i17 #c5 i23 1)) #c7 i23) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.8 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i23 1)) (i17 #c1 i23 1)) (i17 #c2 i23 1)) (i17 #c3 i23 1)) (i17 #c4 i23 1)) (i17 #c5 i23 1)) (i17 #c6 i23 1)) #c7 i23) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.9 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.11 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.12 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) (i17 #ca i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.13 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) (i17 #ca i24 1)) (i17 #cb i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) (i17 #ca i24 1)) (i17 #cb i24 1)) (i17 #cc i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.15 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) (i17 #ca i24 1)) (i17 #cb i24 1)) (i17 #cc i24 1)) (i17 #cd i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.16 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) (i17 #ca i24 1)) (i17 #cb i24 1)) (i17 #cc i24 1)) (i17 #cd i24 1)) (i17 #ce i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.17 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i4 addInteger (i17 i16 #736f6d65746f6b656e 1) (i17 i16 i24 1)) (i17 #c1 i24 1)) (i17 #c2 i24 1)) (i17 #c3 i24 1)) (i17 #c4 i24 1)) (i17 #c5 i24 1)) (i17 #c6 i24 1)) (i17 i23 i24 1)) (i17 #c8 i24 1)) (i17 #c9 i24 1)) (i17 #ca i24 1)) (i17 #cb i24 1)) (i17 #cc i24 1)) (i17 #cd i24 1)) (i17 #ce i24 1)) (i17 #cf i24 1)) i23 i24) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i12 i1 (delay i5) (delay (force (i14 (equalsData (i18 (i17 i1)) i6) (delay (i4 (i13 (i17 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
unionWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> iData (i7 (unIData i2) (unIData i1))) i2 i1) i2 i1) (\i0 -> \i0 -> i2) (i10 i16 i17 1) (i10 i16 i17 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
unionWith.(+).itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i12 (i14 i2) (i13 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i12 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i14 (mkPairData i2 (i10 (i12 i5) (i12 (i17 i3)))) (i7 i19 i4 (i16 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i14 i5 (i7 i15 (i17 i3) (i16 i3) i4))) (delay (i14 (i17 i3) (i7 i15 i5 i4 (i16 i3))))))))) (i17 (i16 i2))) (i16 i3)))))) i12 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (force mkCons)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)))
unionWith.(+).applied (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i10 i16 i17 1) (i10 i16 i17 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
unionWith.tokens (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i10 i16 #736f6d65746f6b656e 1) (i10 i16 #6f74686572746f6b656e 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0))
unionWith.symbols (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i5 (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i10 #c0 i16 1) (i10 #c7 i16 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> iData (i7 (unIData i2) (unIData i1))) i2 i1) i2 i1) (\i0 -> \i0 -> i2) (i10 #c0 i16 1) (i10 #c7 i16 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i14 i13 i20 1) (i14 i13 #746f6b656e 1)) (i14 #c7 i20 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i15 i13 i21 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c7 i21 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.4 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i21 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c7 i21 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i21 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c7 i21 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.6 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i21 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c7 i21 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.7 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i21 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c7 i21 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.8 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i21 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 #c7 i21 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionWith.growing.9 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.11 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.12 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 #ca i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.13 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 #ca i14 1)) (i15 #cb i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 #ca i14 1)) (i15 #cb i14 1)) (i15 #cc i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.15 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 #ca i14 1)) (i15 #cb i14 1)) (i15 #cc i14 1)) (i15 #cd i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.16 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 #ca i14 1)) (i15 #cb i14 1)) (i15 #cc i14 1)) (i15 #cd i14 1)) (i15 #ce i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWith.growing.17 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i13 i22 1) (i15 i13 i14 1)) (i15 #c1 i14 1)) (i15 #c2 i14 1)) (i15 #c3 i14 1)) (i15 #c4 i14 1)) (i15 #c5 i14 1)) (i15 #c6 i14 1)) (i15 i21 i14 1)) (i15 #c8 i14 1)) (i15 #c9 i14 1)) (i15 #ca i14 1)) (i15 #cb i14 1)) (i15 #cc i14 1)) (i15 #cd i14 1)) (i15 #ce i14 1)) (i15 #cf i14 1)) (i15 i21 i22 1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c0) #746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #736f6d65746f6b656e))
unionWithData const.itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> (\i0 -> i5 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i6 i5 i2 i1) i2 i1) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i12 (i14 i2) (i13 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i12 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i14 (mkPairData i2 (i10 (i12 i5) (i12 (i17 i3)))) (i7 i19 i4 (i16 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i14 i5 (i7 i15 (i17 i3) (i16 i3) i4))) (delay (i14 (i17 i3) (i7 i15 i5 i4 (i16 i3))))))))) (i17 (i16 i2))) (i16 i3)))))) i12 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (force mkCons)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)))
unionWithData const.applied (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> i5 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i6 i5 i2 i1) i2 i1) (\i0 -> \i0 -> i2) (i10 i16 i17 1) (i10 i16 i17 1)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
isZero.itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i13 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i13 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay True) (delay (force (i6 (i3 (i9 i1)) (delay (i2 (i10 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (\i0 -> \i0 -> i3 i2 i1 i4)) (force ifThenElse)) (delay False)) (force headList)) (force tailList)) (force (force sndPair))))
isZero.true (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i11 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i11 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) ((\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i9 (\i0 -> \i0 -> iData (subtractInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i14 i20 i21 1) (i14 i20 i21 1))) (\i0 -> i2 (\i0 -> \i0 -> force (i8 i1 (delay True) (delay (force (i5 (i3 (i13 i1)) (delay (i2 (i12 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i7 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
isZero.false (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i13 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i13 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) ((\i0 -> \i0 -> \i0 -> (\i0 -> i14 (bData i4) (mapData i1)) (i13 (bData i2) (iData i1))) #c0 #736f6d65746f6b656e 1)) (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay True) (delay (force (i6 (i3 (i9 i1)) (delay (i2 (i10 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (\i0 -> \i0 -> i3 i2 i1 i4)) (force ifThenElse)) (delay False)) (force headList)) (force tailList)) (force (force sndPair))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
equality.itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> \i0 -> i6 (\i0 -> i3 (unMapData (i13 i1))) i1) ((\i0 -> \i0 -> i6 (\i0 -> i3 (unIData (i13 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) ((\i0 -> i8 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i9 (\i0 -> \i0 -> iData (subtractInteger (unIData i2) (unIData i1))) i2 i1) i2 i1)) (\i0 -> i2 (\i0 -> \i0 -> force (i8 i1 (delay True) (delay (force (i5 (i3 (i14 i1)) (delay (i2 (i13 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i7 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i12 (i14 i2) (i13 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i12 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i14 (mkPairData i2 (i10 (i12 i5) (i12 (i17 i3)))) (i7 i19 i4 (i16 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i14 i5 (i7 i15 (i17 i3) (i16 i3) i4))) (delay (i14 (i17 i3) (i7 i15 i5 i4 (i16 i3))))))))) (i17 (i16 i2))) (i16 i3)))))) i12 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (force mkCons)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)))
equality.triviallyTrue (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i11 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i11 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) ((\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i9 (\i0 -> \i0 -> iData (subtractInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i14 i20 i21 1) (i14 i20 i21 1))) (\i0 -> i2 (\i0 -> \i0 -> force (i8 i1 (delay True) (delay (force (i5 (i3 (i13 i1)) (delay (i2 (i12 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i7 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
equality.triviallyFalse (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i11 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i11 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) ((\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i9 (\i0 -> \i0 -> iData (subtractInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i14 i20 #736f6d65746f6b656e 1) (i14 i20 #6f74686572746f6b656e 1))) (\i0 -> i2 (\i0 -> \i0 -> force (i8 i1 (delay True) (delay (force (i5 (i3 (i13 i1)) (delay (i2 (i12 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i7 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0))
equality.swappedTokensTrue (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i18 i24 i25 1) (i18 i24 i17 1)) (i5 addInteger (i18 i24 i17 1) (i18 i24 i25 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #6f74686572746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
equality.swappedSymbolsTrue (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i18 i24 i25 1) (i18 i17 i25 1)) (i5 addInteger (i18 i17 i25 1) (i18 i24 i25 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #c7) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
equality.growing.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i11 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i11 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) ((\i0 -> \i0 -> (\i0 -> i8 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1)))) (\i0 -> \i0 -> i9 (\i0 -> \i0 -> iData (subtractInteger (unIData i2) (unIData i1))) i2 i1) i2 i1) (i14 i20 i21 1) (i14 i20 i21 1))) (\i0 -> i2 (\i0 -> \i0 -> force (i8 i1 (delay True) (delay (force (i5 (i3 (i13 i1)) (delay (i2 (i12 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i7 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i23 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i23 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
equality.growing.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i18 i24 i17 1) (i18 i24 i25 1)) (i5 addInteger (i18 i24 i17 1) (i18 i24 i25 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i24 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i24 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #746f6b656e))
equality.growing.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i19 i18 i17 1) (i19 i18 i26 1)) (i19 i25 i26 1)) (i5 addInteger (i5 addInteger (i19 i18 i17 1) (i19 i18 i26 1)) (i19 i25 i26 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i25 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c1) #746f6b656e))
equality.growing.4 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i20 i18 i17 1) (i20 i18 i27 1)) (i20 i19 i27 1)) (i20 i26 i27 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i20 i18 i17 1) (i20 i18 i27 1)) (i20 i19 i27 1)) (i20 i26 i27 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i26 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i26 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c2) #746f6b656e))
equality.growing.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i21 i18 i17 1) (i21 i18 i28 1)) (i21 i19 i28 1)) (i21 i20 i28 1)) (i21 i27 i28 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i21 i18 i17 1) (i21 i18 i28 1)) (i21 i19 i28 1)) (i21 i20 i28 1)) (i21 i27 i28 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i27 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i27 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c3) #746f6b656e))
equality.growing.6 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i22 i18 i17 1) (i22 i18 i29 1)) (i22 i19 i29 1)) (i22 i20 i29 1)) (i22 i21 i29 1)) (i22 i28 i29 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i22 i18 i17 1) (i22 i18 i29 1)) (i22 i19 i29 1)) (i22 i20 i29 1)) (i22 i21 i29 1)) (i22 i28 i29 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i28 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i28 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c4) #746f6b656e))
equality.growing.7 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i23 i18 i17 1) (i23 i18 i30 1)) (i23 i19 i30 1)) (i23 i20 i30 1)) (i23 i21 i30 1)) (i23 i22 i30 1)) (i23 i29 i30 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i23 i18 i17 1) (i23 i18 i30 1)) (i23 i19 i30 1)) (i23 i20 i30 1)) (i23 i21 i30 1)) (i23 i22 i30 1)) (i23 i29 i30 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i29 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i29 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c5) #746f6b656e))
equality.growing.8 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i24 i18 i17 1) (i24 i18 i31 1)) (i24 i19 i31 1)) (i24 i20 i31 1)) (i24 i21 i31 1)) (i24 i22 i31 1)) (i24 i23 i31 1)) (i24 i30 i31 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i24 i18 i17 1) (i24 i18 i31 1)) (i24 i19 i31 1)) (i24 i20 i31 1)) (i24 i21 i31 1)) (i24 i22 i31 1)) (i24 i23 i31 1)) (i24 i30 i31 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i30 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i30 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c6) #746f6b656e))
equality.growing.9 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i25 i18 i17 1) (i25 i18 i32 1)) (i25 i19 i32 1)) (i25 i20 i32 1)) (i25 i21 i32 1)) (i25 i22 i32 1)) (i25 i23 i32 1)) (i25 i24 i32 1)) (i25 i31 i32 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i25 i18 i17 1) (i25 i18 i32 1)) (i25 i19 i32 1)) (i25 i20 i32 1)) (i25 i21 i32 1)) (i25 i22 i32 1)) (i25 i23 i32 1)) (i25 i24 i32 1)) (i25 i31 i32 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i29 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i31 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i31 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
equality.growing.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i26 i18 i17 1) (i26 i18 i33 1)) (i26 i19 i33 1)) (i26 i20 i33 1)) (i26 i21 i33 1)) (i26 i22 i33 1)) (i26 i23 i33 1)) (i26 i24 i33 1)) (i26 i25 i33 1)) (i26 i32 i33 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i26 i18 i17 1) (i26 i18 i33 1)) (i26 i19 i33 1)) (i26 i20 i33 1)) (i26 i21 i33 1)) (i26 i22 i33 1)) (i26 i23 i33 1)) (i26 i24 i33 1)) (i26 i25 i33 1)) (i26 i32 i33 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i30 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i32 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i32 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i32 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c8) #746f6b656e))
equality.growing.11 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i27 i18 i17 1) (i27 i18 i34 1)) (i27 i19 i34 1)) (i27 i20 i34 1)) (i27 i21 i34 1)) (i27 i22 i34 1)) (i27 i23 i34 1)) (i27 i24 i34 1)) (i27 i25 i34 1)) (i27 i26 i34 1)) (i27 i33 i34 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i27 i18 i17 1) (i27 i18 i34 1)) (i27 i19 i34 1)) (i27 i20 i34 1)) (i27 i21 i34 1)) (i27 i22 i34 1)) (i27 i23 i34 1)) (i27 i24 i34 1)) (i27 i25 i34 1)) (i27 i26 i34 1)) (i27 i33 i34 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i31 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i33 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i33 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i33 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c9) #746f6b656e))
equality.growing.12 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i28 i18 i17 1) (i28 i18 i35 1)) (i28 i19 i35 1)) (i28 i20 i35 1)) (i28 i21 i35 1)) (i28 i22 i35 1)) (i28 i23 i35 1)) (i28 i24 i35 1)) (i28 i25 i35 1)) (i28 i26 i35 1)) (i28 i27 i35 1)) (i28 i34 i35 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i28 i18 i17 1) (i28 i18 i35 1)) (i28 i19 i35 1)) (i28 i20 i35 1)) (i28 i21 i35 1)) (i28 i22 i35 1)) (i28 i23 i35 1)) (i28 i24 i35 1)) (i28 i25 i35 1)) (i28 i26 i35 1)) (i28 i27 i35 1)) (i28 i34 i35 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i32 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i34 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i34 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i34 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #ca) #746f6b656e))
equality.growing.13 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i29 i18 i17 1) (i29 i18 i36 1)) (i29 i19 i36 1)) (i29 i20 i36 1)) (i29 i21 i36 1)) (i29 i22 i36 1)) (i29 i23 i36 1)) (i29 i24 i36 1)) (i29 i25 i36 1)) (i29 i26 i36 1)) (i29 i27 i36 1)) (i29 i28 i36 1)) (i29 i35 i36 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i29 i18 i17 1) (i29 i18 i36 1)) (i29 i19 i36 1)) (i29 i20 i36 1)) (i29 i21 i36 1)) (i29 i22 i36 1)) (i29 i23 i36 1)) (i29 i24 i36 1)) (i29 i25 i36 1)) (i29 i26 i36 1)) (i29 i27 i36 1)) (i29 i28 i36 1)) (i29 i35 i36 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i33 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i35 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i35 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i35 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #cb) #746f6b656e))
equality.growing.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i30 i18 i17 1) (i30 i18 i37 1)) (i30 i19 i37 1)) (i30 i20 i37 1)) (i30 i21 i37 1)) (i30 i22 i37 1)) (i30 i23 i37 1)) (i30 i24 i37 1)) (i30 i25 i37 1)) (i30 i26 i37 1)) (i30 i27 i37 1)) (i30 i28 i37 1)) (i30 i29 i37 1)) (i30 i36 i37 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i30 i18 i17 1) (i30 i18 i37 1)) (i30 i19 i37 1)) (i30 i20 i37 1)) (i30 i21 i37 1)) (i30 i22 i37 1)) (i30 i23 i37 1)) (i30 i24 i37 1)) (i30 i25 i37 1)) (i30 i26 i37 1)) (i30 i27 i37 1)) (i30 i28 i37 1)) (i30 i29 i37 1)) (i30 i36 i37 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i34 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i36 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i36 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i36 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #cc) #746f6b656e))
equality.growing.15 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i31 i18 i17 1) (i31 i18 i38 1)) (i31 i19 i38 1)) (i31 i20 i38 1)) (i31 i21 i38 1)) (i31 i22 i38 1)) (i31 i23 i38 1)) (i31 i24 i38 1)) (i31 i25 i38 1)) (i31 i26 i38 1)) (i31 i27 i38 1)) (i31 i28 i38 1)) (i31 i29 i38 1)) (i31 i30 i38 1)) (i31 i37 i38 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i31 i18 i17 1) (i31 i18 i38 1)) (i31 i19 i38 1)) (i31 i20 i38 1)) (i31 i21 i38 1)) (i31 i22 i38 1)) (i31 i23 i38 1)) (i31 i24 i38 1)) (i31 i25 i38 1)) (i31 i26 i38 1)) (i31 i27 i38 1)) (i31 i28 i38 1)) (i31 i29 i38 1)) (i31 i30 i38 1)) (i31 i37 i38 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i35 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i37 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i37 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i37 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) #cc) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #cd) #746f6b656e))
equality.growing.16 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i32 i18 i17 1) (i32 i18 i39 1)) (i32 i19 i39 1)) (i32 i20 i39 1)) (i32 i21 i39 1)) (i32 i22 i39 1)) (i32 i23 i39 1)) (i32 i24 i39 1)) (i32 i25 i39 1)) (i32 i26 i39 1)) (i32 i27 i39 1)) (i32 i28 i39 1)) (i32 i29 i39 1)) (i32 i30 i39 1)) (i32 i31 i39 1)) (i32 i38 i39 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i32 i18 i17 1) (i32 i18 i39 1)) (i32 i19 i39 1)) (i32 i20 i39 1)) (i32 i21 i39 1)) (i32 i22 i39 1)) (i32 i23 i39 1)) (i32 i24 i39 1)) (i32 i25 i39 1)) (i32 i26 i39 1)) (i32 i27 i39 1)) (i32 i28 i39 1)) (i32 i29 i39 1)) (i32 i30 i39 1)) (i32 i31 i39 1)) (i32 i38 i39 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i36 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i38 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i38 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i38 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) #cc) #cd) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #ce) #746f6b656e))
equality.growing.17 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i14 i1))) i1) ((\i0 -> \i0 -> i4 (\i0 -> i3 (unIData (i14 i1))) i1) (\i0 -> equalsInteger i1 0)) i1) (i5 subtractInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i33 i18 i17 1) (i33 i18 i40 1)) (i33 i19 i40 1)) (i33 i20 i40 1)) (i33 i21 i40 1)) (i33 i22 i40 1)) (i33 i23 i40 1)) (i33 i24 i40 1)) (i33 i25 i40 1)) (i33 i26 i40 1)) (i33 i27 i40 1)) (i33 i28 i40 1)) (i33 i29 i40 1)) (i33 i30 i40 1)) (i33 i31 i40 1)) (i33 i32 i40 1)) (i33 i39 i40 1)) (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i5 addInteger (i33 i18 i17 1) (i33 i18 i40 1)) (i33 i19 i40 1)) (i33 i20 i40 1)) (i33 i21 i40 1)) (i33 i22 i40 1)) (i33 i23 i40 1)) (i33 i24 i40 1)) (i33 i25 i40 1)) (i33 i26 i40 1)) (i33 i27 i40 1)) (i33 i28 i40 1)) (i33 i29 i40 1)) (i33 i30 i40 1)) (i33 i31 i40 1)) (i33 i32 i40 1)) (i33 i39 i40 1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i11 i1 (delay True) (delay (force (i5 (i3 (i16 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> \i0 -> i10 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> i3 (\i0 -> \i0 -> mapData (i3 (unMapData i2) (unMapData i1))))) (\i0 -> i2 (\i0 -> \i0 -> iData (i3 (unIData i2) (unIData i1))))) (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> i1 (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i4 i11 (i13 i2) (i12 i2) i1)))) (\i0 -> \i0 -> \i0 -> force (i9 i1 (delay (i37 i3 i2)) (delay ((\i0 -> (\i0 -> force (i13 (equalsData i2 i1) (delay (i39 (mkPairData i2 (i10 (i12 i5) (i12 (i16 i3)))) (i7 i18 i4 (i15 i3)))) (delay (force (i13 (lessThanByteString (unBData i2) (unBData i1)) (delay (i39 i5 (i7 i14 (i16 i3) (i15 i3) i4))) (delay (i39 (i16 i3) (i7 i14 i5 i4 (i15 i3))))))))) (i16 (i15 i2))) (i15 i3)))))) i11 i2 i1)) (force (force chooseList))) (force (force sndPair))) (force ifThenElse)) (\i0 -> \i0 -> i1)) (force tailList)) (force headList)) (force (force fstPair))) (\i0 -> \i0 -> i2)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) #cc) #cd) #ce) (\i0 -> \i0 -> \i0 -> i4 i3 (i5 i2 i1))) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #cf) #746f6b656e))